// <auto-generated />
using System;
using Extractify.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Extractify.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250610113239_AddImageUrlToScrapedData")]
    partial class AddImageUrlToScrapedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Extractify.Domain.Entities.ScrapedData", b =>
                {
                    b.Property<int>("ScrapedDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScrapedDataId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScrapedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScrapingTaskId")
                        .HasColumnType("int");

                    b.HasKey("ScrapedDataId");

                    b.HasIndex("ScrapingTaskId");

                    b.ToTable("ScrapedData");
                });

            modelBuilder.Entity("Extractify.Domain.Entities.ScrapingTask", b =>
                {
                    b.Property<int>("ScrapingTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScrapingTaskId"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Selector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScrapingTaskId");

                    b.ToTable("ScrapingTasks");
                });

            modelBuilder.Entity("Extractify.Domain.Entities.ScrapedData", b =>
                {
                    b.HasOne("Extractify.Domain.Entities.ScrapingTask", "ScrapingTask")
                        .WithMany("ScrapedData")
                        .HasForeignKey("ScrapingTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScrapingTask");
                });

            modelBuilder.Entity("Extractify.Domain.Entities.ScrapingTask", b =>
                {
                    b.Navigation("ScrapedData");
                });
#pragma warning restore 612, 618
        }
    }
}
